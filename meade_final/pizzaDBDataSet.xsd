<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="pizzaDBDataSet" targetNamespace="http://tempuri.org/pizzaDBDataSet.xsd" xmlns:mstns="http://tempuri.org/pizzaDBDataSet.xsd" xmlns="http://tempuri.org/pizzaDBDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="pizzaDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="pizzaDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.meade_milestone2.Properties.Settings.GlobalReference.Default.pizzaDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="customerTableAdapter" GeneratorDataComponentClassName="customerTableAdapter" Name="customer" UserDataComponentName="customerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.customer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[customer] WHERE (([cusID] = @Original_cusID) AND ([cusName] = @Original_cusName) AND ([cusAddress] = @Original_cusAddress) AND ([cusZip] = @Original_cusZip) AND ([cusCity] = @Original_cusCity) AND ([cusState] = @Original_cusState) AND ([cusEmail] = @Original_cusEmail))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusZip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusZip" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusCity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusState" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[customer] ([cusName], [cusAddress], [cusZip], [cusCity], [cusState], [cusEmail]) VALUES (@cusName, @cusAddress, @cusZip, @cusCity, @cusState, @cusEmail);
SELECT cusID, cusName, cusAddress, cusZip, cusCity, cusState, cusEmail FROM customer WHERE (cusID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusZip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusZip" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusState" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT cusID, cusName, cusAddress, cusZip, cusCity, cusState, cusEmail FROM dbo.customer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[customer] SET [cusName] = @cusName, [cusAddress] = @cusAddress, [cusZip] = @cusZip, [cusCity] = @cusCity, [cusState] = @cusState, [cusEmail] = @cusEmail WHERE (([cusID] = @Original_cusID) AND ([cusName] = @Original_cusName) AND ([cusAddress] = @Original_cusAddress) AND ([cusZip] = @Original_cusZip) AND ([cusCity] = @Original_cusCity) AND ([cusState] = @Original_cusState) AND ([cusEmail] = @Original_cusEmail));
SELECT cusID, cusName, cusAddress, cusZip, cusCity, cusState, cusEmail FROM customer WHERE (cusID = @cusID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusZip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusZip" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusState" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cusEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusZip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusZip" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusCity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusState" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cusEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cusEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="cusID" ColumnName="cusID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.customer" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@cusID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="cusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="cusID" DataSetColumn="cusID" />
              <Mapping SourceColumn="cusName" DataSetColumn="cusName" />
              <Mapping SourceColumn="cusAddress" DataSetColumn="cusAddress" />
              <Mapping SourceColumn="cusZip" DataSetColumn="cusZip" />
              <Mapping SourceColumn="cusCity" DataSetColumn="cusCity" />
              <Mapping SourceColumn="cusState" DataSetColumn="cusState" />
              <Mapping SourceColumn="cusEmail" DataSetColumn="cusEmail" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="InventoryTableAdapter" GeneratorDataComponentClassName="InventoryTableAdapter" Name="Inventory" UserDataComponentName="InventoryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.Inventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Inventory] WHERE (([inventoryID] = @Original_inventoryID) AND ([productID] = @Original_productID) AND ([inventoryQuantity] = @Original_inventoryQuantity))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_inventoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="inventoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_inventoryQuantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="inventoryQuantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Inventory] ([productID], [inventoryQuantity]) VALUES (@productID, @inventoryQuantity);
SELECT inventoryID, productID, inventoryQuantity FROM Inventory WHERE (inventoryID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@inventoryQuantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="inventoryQuantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT inventoryID, productID, inventoryQuantity FROM dbo.Inventory</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Inventory] SET [productID] = @productID, [inventoryQuantity] = @inventoryQuantity WHERE (([inventoryID] = @Original_inventoryID) AND ([productID] = @Original_productID) AND ([inventoryQuantity] = @Original_inventoryQuantity));
SELECT inventoryID, productID, inventoryQuantity FROM Inventory WHERE (inventoryID = @inventoryID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@inventoryQuantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="inventoryQuantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_inventoryID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="inventoryID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_inventoryQuantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="inventoryQuantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="inventoryID" ColumnName="inventoryID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.Inventory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@inventoryID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="inventoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="inventoryID" DataSetColumn="inventoryID" />
              <Mapping SourceColumn="productID" DataSetColumn="productID" />
              <Mapping SourceColumn="inventoryQuantity" DataSetColumn="inventoryQuantity" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.Inventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetInventoryID" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetInventoryID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetInventoryID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT inventoryID, productID, inventoryQuantity FROM dbo.Inventory WHERE inventoryID Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="inventoryID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.Inventory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="inventoryID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.Inventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetLessThan" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetLessThan" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="GetLessThan">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT inventoryID, productID, inventoryQuantity FROM dbo.Inventory WHERE inventoryQuantity &lt; 50
ORDER BY productID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.Inventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetProductID" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetProductID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetProductID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT inventoryID, productID, inventoryQuantity FROM dbo.Inventory WHERE productID Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="productID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.Inventory" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.Inventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetStock" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetStock" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="GetStock">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT inventoryID, productID, inventoryQuantity FROM dbo.Inventory WHERE inventoryQuantity &lt;= 0 ORDER BY inventoryID;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.Inventory" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="ShowLargerThan" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="ShowLargerThan" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="ShowLargerThan">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT inventoryID, productID, inventoryQuantity FROM dbo.Inventory WHERE inventoryQuantity &gt; 50
ORDER BY productID</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="orderTableAdapter" GeneratorDataComponentClassName="orderTableAdapter" Name="order" UserDataComponentName="orderTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[order]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[order] WHERE (([orderID] = @Original_orderID) AND ([customerID] = @Original_customerID) AND ((@IsNull_total = 1 AND [total] IS NULL) OR ([total] = @Original_total)) AND ((@IsNull_orderstatus = 1 AND [orderstatus] IS NULL) OR ([orderstatus] = @Original_orderstatus)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_orderID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_customerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_total" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="total" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_total" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="total" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_orderstatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderstatus" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_orderstatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderstatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[order] ([customerID], [total], [orderstatus]) VALUES (@customerID, @total, @orderstatus);
SELECT orderID, customerID, total, orderstatus FROM [order] WHERE (orderID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@customerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@total" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="total" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@orderstatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderstatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT orderID, customerID, total, orderstatus FROM dbo.[order]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[order] SET [customerID] = @customerID, [total] = @total, [orderstatus] = @orderstatus WHERE (([orderID] = @Original_orderID) AND ([customerID] = @Original_customerID) AND ((@IsNull_total = 1 AND [total] IS NULL) OR ([total] = @Original_total)) AND ((@IsNull_orderstatus = 1 AND [orderstatus] IS NULL) OR ([orderstatus] = @Original_orderstatus)));
SELECT orderID, customerID, total, orderstatus FROM [order] WHERE (orderID = @orderID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@customerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@total" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="total" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@orderstatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderstatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_orderID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_customerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="customerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_total" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="total" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_total" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="total" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_orderstatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderstatus" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_orderstatus" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderstatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="orderID" ColumnName="orderID" DataSourceName="[A:\MEADE_MILESTONE4_231\MEADE_MILESTONE4_231\PIZZADB.MDF].dbo.[order]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@orderID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="orderID" DataSetColumn="orderID" />
              <Mapping SourceColumn="customerID" DataSetColumn="customerID" />
              <Mapping SourceColumn="total" DataSetColumn="total" />
              <Mapping SourceColumn="orderstatus" DataSetColumn="orderstatus" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[order]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetCustomerID" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetCustomerID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetCustomerID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT customerID, orderID, orderstatus, total FROM [order] WHERE (customerID LIKE @value)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="customerID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[order]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="customerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[order]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetID" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT customerID, orderID, orderstatus, total FROM [order] WHERE (orderID LIKE @value)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="orderID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[order]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[order]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetOrderStarting" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetOrderStarting" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="GetOrderStarting">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT orderID, orderstatus 
FROM dbo.[order] 
WHERE orderstatus=1;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[order]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetStatusFinished" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetStatusFinished" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="GetStatusFinished">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT orderID, orderstatus 
FROM dbo.[order] 
WHERE orderstatus=2;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[order]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetTotal" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetTotal" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="GetTotal">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT customerID, orderID, orderstatus, total FROM [order] WHERE (total LIKE @value)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="value" ColumnName="total" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[order]" DataTypeServer="money" DbType="Currency" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Money" Scale="0" Size="8" SourceColumn="total" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="orderitemTableAdapter" GeneratorDataComponentClassName="orderitemTableAdapter" Name="orderitem" UserDataComponentName="orderitemTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.orderitem" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[orderitem] WHERE (([orderitemID] = @Original_orderitemID) AND ([productID] = @Original_productID) AND ([quantity] = @Original_quantity) AND ((@IsNull_orderID = 1 AND [orderID] IS NULL) OR ([orderID] = @Original_orderID)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_orderitemID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderitemID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_orderID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_orderID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[orderitem] ([orderitemID], [productID], [quantity], [orderID]) VALUES (@orderitemID, @productID, @quantity, @orderID);
SELECT orderitemID, productID, quantity, orderID FROM orderitem WHERE (orderitemID = @orderitemID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@orderitemID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderitemID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@orderID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT orderitemID, productID, quantity, orderID FROM dbo.orderitem</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[orderitem] SET [orderitemID] = @orderitemID, [productID] = @productID, [quantity] = @quantity, [orderID] = @orderID WHERE (([orderitemID] = @Original_orderitemID) AND ([productID] = @Original_productID) AND ([quantity] = @Original_quantity) AND ((@IsNull_orderID = 1 AND [orderID] IS NULL) OR ([orderID] = @Original_orderID)));
SELECT orderitemID, productID, quantity, orderID FROM orderitem WHERE (orderitemID = @orderitemID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@orderitemID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderitemID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@orderID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_orderitemID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderitemID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_orderID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_orderID" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="orderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="orderitemID" DataSetColumn="orderitemID" />
              <Mapping SourceColumn="productID" DataSetColumn="productID" />
              <Mapping SourceColumn="quantity" DataSetColumn="quantity" />
              <Mapping SourceColumn="orderID" DataSetColumn="orderID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="productTableAdapter" GeneratorDataComponentClassName="productTableAdapter" Name="product" UserDataComponentName="productTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.product" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[product] WHERE (([productID] = @Original_productID) AND ([productName] = @Original_productName) AND ([productPrice] = @Original_productPrice))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_productName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="productName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_productPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="productPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[product] ([productName], [productPrice]) VALUES (@productName, @productPrice);
SELECT productID, productName, productPrice FROM product WHERE (productID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@productName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="productName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@productPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="productPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT productID, productName, productPrice FROM dbo.product</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[product] SET [productName] = @productName, [productPrice] = @productPrice WHERE (([productID] = @Original_productID) AND ([productName] = @Original_productName) AND ([productPrice] = @Original_productPrice));
SELECT productID, productName, productPrice FROM product WHERE (productID = @productID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@productName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="productName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@productPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="productPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_productID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_productName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="productName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_productPrice" Precision="18" ProviderType="Decimal" Scale="0" Size="0" SourceColumn="productPrice" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="productID" ColumnName="productID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.product" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@productID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="productID" DataSetColumn="productID" />
              <Mapping SourceColumn="productName" DataSetColumn="productName" />
              <Mapping SourceColumn="productPrice" DataSetColumn="productPrice" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.product" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetName" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT productID, productName, productPrice FROM dbo.product WHERE productName Like @value
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="productName" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.product" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@value" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="productName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.product" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetPrice" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetPrice" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetPrice">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT productID, productName, productPrice FROM dbo.product WHERE productPrice Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="productPrice" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.product" DataTypeServer="decimal(18, 0)" DbType="Decimal" Direction="Input" ParameterName="@value" Precision="18" ProviderType="Decimal" Scale="0" Size="9" SourceColumn="productPrice" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.product" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetProductID" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetProductID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="GetProductID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT productID, productName, productPrice FROM dbo.product WHERE productID Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="productID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.product" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="productID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="userTableAdapter" GeneratorDataComponentClassName="userTableAdapter" Name="user" UserDataComponentName="userTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[user]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[user] WHERE (([userID] = @Original_userID) AND ([userName] = @Original_userName) AND ([userAddress] = @Original_userAddress) AND ([userZip] = @Original_userZip) AND ([userCity] = @Original_userCity) AND ([userState] = @Original_userState) AND ([userEmail] = @Original_userEmail))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userZip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userZip" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userCity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userState" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[user] ([userName], [userAddress], [userZip], [userCity], [userState], [userEmail]) VALUES (@userName, @userAddress, @userZip, @userCity, @userState, @userEmail);
SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM [user] WHERE (userID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userZip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userZip" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userState" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM dbo.[user]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[user] SET [userName] = @userName, [userAddress] = @userAddress, [userZip] = @userZip, [userCity] = @userCity, [userState] = @userState, [userEmail] = @userEmail WHERE (([userID] = @Original_userID) AND ([userName] = @Original_userName) AND ([userAddress] = @Original_userAddress) AND ([userZip] = @Original_userZip) AND ([userCity] = @Original_userCity) AND ([userState] = @Original_userState) AND ([userEmail] = @Original_userEmail));
SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM [user] WHERE (userID = @userID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userZip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userZip" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userState" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userZip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userZip" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userCity" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userCity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userState" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userState" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userEmail" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="userID" ColumnName="userID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[user]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@userID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="userID" DataSetColumn="userID" />
              <Mapping SourceColumn="userName" DataSetColumn="userName" />
              <Mapping SourceColumn="userAddress" DataSetColumn="userAddress" />
              <Mapping SourceColumn="userZip" DataSetColumn="userZip" />
              <Mapping SourceColumn="userCity" DataSetColumn="userCity" />
              <Mapping SourceColumn="userState" DataSetColumn="userState" />
              <Mapping SourceColumn="userEmail" DataSetColumn="userEmail" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[user]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetAddress" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetAddress" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="GetAddress">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM dbo.[user] WHERE userAddress Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="userAddress" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[user]" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@value" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="userAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[user]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetCity" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetCity" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="GetCity">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM dbo.[user] WHERE userCity Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="userCity" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[user]" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@value" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="userCity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[user]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetEmail" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetEmail" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="GetEmail">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM dbo.[user] WHERE userEmail Like @value
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="userEmail" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[user]" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@value" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="userEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[user]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetName" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="GetName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM dbo.[user] WHERE userName Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="userName" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[user]" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@value" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="userName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[user]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetState" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetState" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="GetState">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM dbo.[user] WHERE userState Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="userState" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[user]" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@value" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="userState" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[user]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetUserID" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetUserID" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="GetUserID">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM dbo.[user] WHERE userID Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="userID" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[user]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@value" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="userID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.[user]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="GetZip" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetZip" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="GetZip">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT userID, userName, userAddress, userZip, userCity, userState, userEmail FROM dbo.[user] WHERE userZip Like @value</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="value" ColumnName="userZip" DataSourceName="[A:\MEADE_MILESTONE3_CURRENT\MEADE_MILESTONE3\PIZZADB.MDF].dbo.[user]" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@value" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="userZip" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="statusTableAdapter" GeneratorDataComponentClassName="statusTableAdapter" Name="status" UserDataComponentName="statusTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.status" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[status] WHERE (([statusID] = @Original_statusID) AND ([currentStatus] = @Original_currentStatus))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_statusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="statusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_currentStatus" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="currentStatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[status] ([statusID], [currentStatus]) VALUES (@statusID, @currentStatus);
SELECT statusID, currentStatus FROM status WHERE (statusID = @statusID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@statusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="statusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@currentStatus" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="currentStatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT statusID, currentStatus FROM dbo.status</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[status] SET [statusID] = @statusID, [currentStatus] = @currentStatus WHERE (([statusID] = @Original_statusID) AND ([currentStatus] = @Original_currentStatus));
SELECT statusID, currentStatus FROM status WHERE (statusID = @statusID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@statusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="statusID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@currentStatus" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="currentStatus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_statusID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="statusID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_currentStatus" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="currentStatus" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="statusID" DataSetColumn="statusID" />
              <Mapping SourceColumn="currentStatus" DataSetColumn="currentStatus" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GetNameTableAdapter" GeneratorDataComponentClassName="GetNameTableAdapter" Name="GetName" UserDataComponentName="GetNameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="pizzaDBConnectionString (Settings)" DbObjectName="dbo.GetName" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.GetName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@value" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="productID" DataSetColumn="productID" />
              <Mapping SourceColumn="productName" DataSetColumn="productName" />
              <Mapping SourceColumn="productPrice" DataSetColumn="productPrice" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="pizzaDBDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="pizzaDBDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="pizzaDBDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="customer" msprop:Generator_RowClassName="customerRow" msprop:Generator_RowEvHandlerName="customerRowChangeEventHandler" msprop:Generator_RowDeletedName="customerRowDeleted" msprop:Generator_RowDeletingName="customerRowDeleting" msprop:Generator_RowEvArgName="customerRowChangeEvent" msprop:Generator_TablePropName="customer" msprop:Generator_RowChangedName="customerRowChanged" msprop:Generator_UserTableName="customer" msprop:Generator_RowChangingName="customerRowChanging" msprop:Generator_TableClassName="customerDataTable" msprop:Generator_TableVarName="tablecustomer">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="cusID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="cusID" msprop:Generator_ColumnPropNameInTable="cusIDColumn" msprop:Generator_ColumnPropNameInRow="cusID" msprop:Generator_ColumnVarNameInTable="columncusID" type="xs:int" />
              <xs:element name="cusName" msprop:Generator_UserColumnName="cusName" msprop:Generator_ColumnPropNameInTable="cusNameColumn" msprop:Generator_ColumnPropNameInRow="cusName" msprop:Generator_ColumnVarNameInTable="columncusName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cusAddress" msprop:Generator_UserColumnName="cusAddress" msprop:Generator_ColumnPropNameInTable="cusAddressColumn" msprop:Generator_ColumnPropNameInRow="cusAddress" msprop:Generator_ColumnVarNameInTable="columncusAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cusZip" msprop:Generator_UserColumnName="cusZip" msprop:Generator_ColumnPropNameInTable="cusZipColumn" msprop:Generator_ColumnPropNameInRow="cusZip" msprop:Generator_ColumnVarNameInTable="columncusZip">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cusCity" msprop:Generator_UserColumnName="cusCity" msprop:Generator_ColumnPropNameInTable="cusCityColumn" msprop:Generator_ColumnPropNameInRow="cusCity" msprop:Generator_ColumnVarNameInTable="columncusCity">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cusState" msprop:Generator_UserColumnName="cusState" msprop:Generator_ColumnPropNameInTable="cusStateColumn" msprop:Generator_ColumnPropNameInRow="cusState" msprop:Generator_ColumnVarNameInTable="columncusState">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="cusEmail" msprop:Generator_UserColumnName="cusEmail" msprop:Generator_ColumnPropNameInTable="cusEmailColumn" msprop:Generator_ColumnPropNameInRow="cusEmail" msprop:Generator_ColumnVarNameInTable="columncusEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Inventory" msprop:Generator_RowClassName="InventoryRow" msprop:Generator_RowEvHandlerName="InventoryRowChangeEventHandler" msprop:Generator_RowDeletedName="InventoryRowDeleted" msprop:Generator_RowDeletingName="InventoryRowDeleting" msprop:Generator_RowEvArgName="InventoryRowChangeEvent" msprop:Generator_TablePropName="Inventory" msprop:Generator_RowChangedName="InventoryRowChanged" msprop:Generator_UserTableName="Inventory" msprop:Generator_RowChangingName="InventoryRowChanging" msprop:Generator_TableClassName="InventoryDataTable" msprop:Generator_TableVarName="tableInventory">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="inventoryID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="inventoryID" msprop:Generator_ColumnPropNameInTable="inventoryIDColumn" msprop:Generator_ColumnPropNameInRow="inventoryID" msprop:Generator_ColumnVarNameInTable="columninventoryID" type="xs:int" />
              <xs:element name="productID" msprop:Generator_UserColumnName="productID" msprop:Generator_ColumnPropNameInTable="productIDColumn" msprop:Generator_ColumnPropNameInRow="productID" msprop:Generator_ColumnVarNameInTable="columnproductID" type="xs:int" />
              <xs:element name="inventoryQuantity" msprop:Generator_UserColumnName="inventoryQuantity" msprop:Generator_ColumnPropNameInTable="inventoryQuantityColumn" msprop:Generator_ColumnPropNameInRow="inventoryQuantity" msprop:Generator_ColumnVarNameInTable="columninventoryQuantity" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="order" msprop:Generator_RowClassName="orderRow" msprop:Generator_RowEvHandlerName="orderRowChangeEventHandler" msprop:Generator_RowDeletedName="orderRowDeleted" msprop:Generator_RowDeletingName="orderRowDeleting" msprop:Generator_RowEvArgName="orderRowChangeEvent" msprop:Generator_TablePropName="order" msprop:Generator_RowChangedName="orderRowChanged" msprop:Generator_UserTableName="order" msprop:Generator_RowChangingName="orderRowChanging" msprop:Generator_TableClassName="orderDataTable" msprop:Generator_TableVarName="tableorder">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="orderID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="orderID" msprop:Generator_ColumnPropNameInTable="orderIDColumn" msprop:Generator_ColumnPropNameInRow="orderID" msprop:Generator_ColumnVarNameInTable="columnorderID" type="xs:int" />
              <xs:element name="customerID" msprop:Generator_UserColumnName="customerID" msprop:Generator_ColumnPropNameInTable="customerIDColumn" msprop:Generator_ColumnPropNameInRow="customerID" msprop:Generator_ColumnVarNameInTable="columncustomerID" type="xs:int" />
              <xs:element name="total" msprop:Generator_UserColumnName="total" msprop:Generator_ColumnPropNameInTable="totalColumn" msprop:Generator_ColumnPropNameInRow="total" msprop:Generator_ColumnVarNameInTable="columntotal" type="xs:decimal" minOccurs="0" />
              <xs:element name="orderstatus" msprop:Generator_ColumnPropNameInRow="orderstatus" msprop:Generator_ColumnPropNameInTable="orderstatusColumn" msprop:Generator_ColumnVarNameInTable="columnorderstatus" msprop:Generator_UserColumnName="orderstatus" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="orderitem" msprop:Generator_RowClassName="orderitemRow" msprop:Generator_RowEvHandlerName="orderitemRowChangeEventHandler" msprop:Generator_RowDeletedName="orderitemRowDeleted" msprop:Generator_RowDeletingName="orderitemRowDeleting" msprop:Generator_RowEvArgName="orderitemRowChangeEvent" msprop:Generator_TablePropName="orderitem" msprop:Generator_RowChangedName="orderitemRowChanged" msprop:Generator_UserTableName="orderitem" msprop:Generator_RowChangingName="orderitemRowChanging" msprop:Generator_TableClassName="orderitemDataTable" msprop:Generator_TableVarName="tableorderitem">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="orderitemID" msprop:Generator_UserColumnName="orderitemID" msprop:Generator_ColumnPropNameInTable="orderitemIDColumn" msprop:Generator_ColumnPropNameInRow="orderitemID" msprop:Generator_ColumnVarNameInTable="columnorderitemID" type="xs:int" />
              <xs:element name="productID" msprop:Generator_UserColumnName="productID" msprop:Generator_ColumnPropNameInTable="productIDColumn" msprop:Generator_ColumnPropNameInRow="productID" msprop:Generator_ColumnVarNameInTable="columnproductID" type="xs:int" />
              <xs:element name="quantity" msprop:Generator_UserColumnName="quantity" msprop:Generator_ColumnPropNameInTable="quantityColumn" msprop:Generator_ColumnPropNameInRow="quantity" msprop:Generator_ColumnVarNameInTable="columnquantity" type="xs:int" />
              <xs:element name="orderID" msprop:Generator_UserColumnName="orderID" msprop:Generator_ColumnPropNameInTable="orderIDColumn" msprop:Generator_ColumnPropNameInRow="orderID" msprop:Generator_ColumnVarNameInTable="columnorderID" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="product" msprop:Generator_RowClassName="productRow" msprop:Generator_RowEvHandlerName="productRowChangeEventHandler" msprop:Generator_RowDeletedName="productRowDeleted" msprop:Generator_RowDeletingName="productRowDeleting" msprop:Generator_RowEvArgName="productRowChangeEvent" msprop:Generator_TablePropName="product" msprop:Generator_RowChangedName="productRowChanged" msprop:Generator_UserTableName="product" msprop:Generator_RowChangingName="productRowChanging" msprop:Generator_TableClassName="productDataTable" msprop:Generator_TableVarName="tableproduct">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="productID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="productID" msprop:Generator_ColumnPropNameInTable="productIDColumn" msprop:Generator_ColumnPropNameInRow="productID" msprop:Generator_ColumnVarNameInTable="columnproductID" type="xs:int" />
              <xs:element name="productName" msprop:Generator_UserColumnName="productName" msprop:Generator_ColumnPropNameInTable="productNameColumn" msprop:Generator_ColumnPropNameInRow="productName" msprop:Generator_ColumnVarNameInTable="columnproductName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="productPrice" msprop:Generator_UserColumnName="productPrice" msprop:Generator_ColumnPropNameInTable="productPriceColumn" msprop:Generator_ColumnPropNameInRow="productPrice" msprop:Generator_ColumnVarNameInTable="columnproductPrice" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="user" msprop:Generator_RowClassName="userRow" msprop:Generator_RowEvHandlerName="userRowChangeEventHandler" msprop:Generator_RowDeletedName="userRowDeleted" msprop:Generator_RowDeletingName="userRowDeleting" msprop:Generator_RowEvArgName="userRowChangeEvent" msprop:Generator_TablePropName="user" msprop:Generator_RowChangedName="userRowChanged" msprop:Generator_UserTableName="user" msprop:Generator_RowChangingName="userRowChanging" msprop:Generator_TableClassName="userDataTable" msprop:Generator_TableVarName="tableuser">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="userID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="userID" msprop:Generator_ColumnPropNameInTable="userIDColumn" msprop:Generator_ColumnPropNameInRow="userID" msprop:Generator_ColumnVarNameInTable="columnuserID" type="xs:int" />
              <xs:element name="userName" msprop:Generator_UserColumnName="userName" msprop:Generator_ColumnPropNameInTable="userNameColumn" msprop:Generator_ColumnPropNameInRow="userName" msprop:Generator_ColumnVarNameInTable="columnuserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userAddress" msprop:Generator_UserColumnName="userAddress" msprop:Generator_ColumnPropNameInTable="userAddressColumn" msprop:Generator_ColumnPropNameInRow="userAddress" msprop:Generator_ColumnVarNameInTable="columnuserAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userZip" msprop:Generator_UserColumnName="userZip" msprop:Generator_ColumnPropNameInTable="userZipColumn" msprop:Generator_ColumnPropNameInRow="userZip" msprop:Generator_ColumnVarNameInTable="columnuserZip">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userCity" msprop:Generator_UserColumnName="userCity" msprop:Generator_ColumnPropNameInTable="userCityColumn" msprop:Generator_ColumnPropNameInRow="userCity" msprop:Generator_ColumnVarNameInTable="columnuserCity">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userState" msprop:Generator_UserColumnName="userState" msprop:Generator_ColumnPropNameInTable="userStateColumn" msprop:Generator_ColumnPropNameInRow="userState" msprop:Generator_ColumnVarNameInTable="columnuserState">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="userEmail" msprop:Generator_UserColumnName="userEmail" msprop:Generator_ColumnPropNameInTable="userEmailColumn" msprop:Generator_ColumnPropNameInRow="userEmail" msprop:Generator_ColumnVarNameInTable="columnuserEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="status" msprop:Generator_RowEvHandlerName="statusRowChangeEventHandler" msprop:Generator_RowDeletedName="statusRowDeleted" msprop:Generator_RowDeletingName="statusRowDeleting" msprop:Generator_RowEvArgName="statusRowChangeEvent" msprop:Generator_TablePropName="status" msprop:Generator_RowChangedName="statusRowChanged" msprop:Generator_RowChangingName="statusRowChanging" msprop:Generator_TableClassName="statusDataTable" msprop:Generator_RowClassName="statusRow" msprop:Generator_TableVarName="tablestatus" msprop:Generator_UserTableName="status">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="statusID" msprop:Generator_ColumnPropNameInRow="statusID" msprop:Generator_ColumnPropNameInTable="statusIDColumn" msprop:Generator_ColumnVarNameInTable="columnstatusID" msprop:Generator_UserColumnName="statusID" type="xs:int" />
              <xs:element name="currentStatus" msprop:Generator_ColumnPropNameInRow="currentStatus" msprop:Generator_ColumnPropNameInTable="currentStatusColumn" msprop:Generator_ColumnVarNameInTable="columncurrentStatus" msprop:Generator_UserColumnName="currentStatus">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GetName" msprop:Generator_RowEvHandlerName="GetNameRowChangeEventHandler" msprop:Generator_RowDeletedName="GetNameRowDeleted" msprop:Generator_RowDeletingName="GetNameRowDeleting" msprop:Generator_RowEvArgName="GetNameRowChangeEvent" msprop:Generator_TablePropName="GetName" msprop:Generator_RowChangedName="GetNameRowChanged" msprop:Generator_RowChangingName="GetNameRowChanging" msprop:Generator_TableClassName="GetNameDataTable" msprop:Generator_RowClassName="GetNameRow" msprop:Generator_TableVarName="tableGetName" msprop:Generator_UserTableName="GetName">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="productID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_ColumnPropNameInRow="productID" msprop:Generator_ColumnPropNameInTable="productIDColumn" msprop:Generator_ColumnVarNameInTable="columnproductID" msprop:Generator_UserColumnName="productID" type="xs:int" />
              <xs:element name="productName" msprop:Generator_ColumnPropNameInRow="productName" msprop:Generator_ColumnPropNameInTable="productNameColumn" msprop:Generator_ColumnVarNameInTable="columnproductName" msprop:Generator_UserColumnName="productName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="productPrice" msprop:Generator_ColumnPropNameInRow="productPrice" msprop:Generator_ColumnPropNameInTable="productPriceColumn" msprop:Generator_ColumnVarNameInTable="columnproductPrice" msprop:Generator_UserColumnName="productPrice" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:customer" />
      <xs:field xpath="mstns:cusID" />
    </xs:unique>
    <xs:unique name="Inventory_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Inventory" />
      <xs:field xpath="mstns:inventoryID" />
    </xs:unique>
    <xs:unique name="order_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:order" />
      <xs:field xpath="mstns:orderID" />
    </xs:unique>
    <xs:unique name="orderitem_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:orderitem" />
      <xs:field xpath="mstns:orderitemID" />
    </xs:unique>
    <xs:unique name="product_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:product" />
      <xs:field xpath="mstns:productID" />
    </xs:unique>
    <xs:unique name="user_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:user" />
      <xs:field xpath="mstns:userID" />
    </xs:unique>
    <xs:unique name="status_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:status" />
      <xs:field xpath="mstns:statusID" />
    </xs:unique>
    <xs:unique name="GetName_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GetName" />
      <xs:field xpath="mstns:productID" />
    </xs:unique>
  </xs:element>
</xs:schema>